#
# Keywords
#

var v = 42
const c = 99
setvar dq = 'zz'
setglobal g = "yy"

proc p { echo hi }
func f(x) { return (x) }

call len('str')
= len(g)  # not highlighted

echo not#comment

#
# Escaping quotes with \' \"
#

echo \'single \'single \"double \"double

#
# Single-quoted strings
#

# command mode
echo '/usr/bin'
echo r'C:\Program Files\'  # r'' prefix is allowed

# expression mode
var r1 = '/usr/bin/'
var r2 = r'C:\Program Files'  # r'' prrefix is allowed

# corner cases for r''
echo ls --foo='bar'
echo ls --foo=r'bar'
echo ls bar'bar'
echo ls -r'bar' 

#
# Double-quoted strings
#

echo "hi $r1 \" \\"
var dq = "hi $r2 \" \\"

echo $"hi $r1 \" \\"
var dq = $"hi $r2 \" \\"

# TODO: interpolation
# var dq = "hi ${r2}"
# var dq = "hi $[r2]"

#
# J8 strings
#

echo b'hi \t \' \\'
var j8 = b'hi \t \' \\'

echo u'hi \t \' \\'
var j8 = u'hi \t \' \\'

#
# Triple-quoted strings
#  ''' r'''
#  """
#  b""" u"""
#

var empty = ''

# raw

echo '''
  C:\Program Files\
  one ' 
  two ''
  ''' | cat

var x = '''
  C:\Program Files\
  one ' 
  two ''
  ''' ++ empty

echo r'''
  C:\Program Files\
  one '
  two ''
  ''' | cat

var x = r'''
  C:\Program Files\
  one '
  two ''
  ''' ++ empty

# double quoted

echo """
  one "
  two ""
  """

var x = """
  one "
  two ""
  """

echo $"""
  \$ one "
  \$ two ""
  """

var x = $"""
  \$ one "
  \$ two ""
  """

# j8

echo b'''
  one '
  two ''
  three \'''
  ''' | cat

var x = b'''
  j8 \'''
  one '
  two ''
  three \'''
  ''' ++ empty

echo u'''
  one '
  two ''
  three \'''
  ''' | cat

var x = u'''
  j8 \'''
  one '
  two ''
  three \'''
  ''' ++ empty

#
# More
#

var d = {hi: 42}
echo $[42 + d['hi']]
echo "sum = $[42 + d['hi']]"

var ch = 'i'
echo $[42 + d["h$[ch]"]]

# Nested double quotes!
echo "$[42 + d["h$[ch]"]]"
echo "hi $["inner"]"

echo done

pp (1 + (2 + 3))

pp ('hi' ++ "hi $x" + r'c:\' + b'\n')

if (42 > 3) {
  echo 'yes'
}
